---
apiVersion: helm.toolkit.fluxcd.io/v2beta1
kind: HelmRelease
metadata:
  name: cert-manager
  namespace: cert-manager
spec:
  chart:
    spec:
      chart: cert-manager
      reconcileStrategy: ChartVersion
      sourceRef:
        kind: HelmRepository
        name: jetstack
        namespace: flux-system
  interval: 1m0s
  values:
    affinity: {}
    cainjector:
      affinity: {}
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
      enabled: true
      extraArgs: []
      image:
        pullPolicy: IfNotPresent
        repository: quay.io/jetstack/cert-manager-cainjector
      nodeSelector:
        kubernetes.io/os: linux
      podLabels: {}
      replicaCount: 1
      resources: {}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount:
        automountServiceAccountToken: true
        create: true
      strategy: {}
      tolerations: []
      topologySpreadConstraints: []
    clusterResourceNamespace: ""
    containerSecurityContext:
      allowPrivilegeEscalation: false
      capabilities:
        drop:
        - ALL
    extraArgs: []
    extraEnv: []
    featureGates: ""
    global:
      commonLabels: {}
      imagePullSecrets: []
      leaderElection:
        namespace: kube-system
      logLevel: 2
      podSecurityPolicy:
        enabled: false
        useAppArmor: true
      priorityClassName: ""
      rbac:
        aggregateClusterRoles: true
        create: true
    image:
      pullPolicy: IfNotPresent
      repository: quay.io/jetstack/cert-manager-controller
    ingressShim: {}
    installCRDs: false
    namespace: ""
    nodeSelector:
      kubernetes.io/os: linux
    podLabels: {}
    prometheus:
      enabled: true
      servicemonitor:
        annotations: {}
        enabled: false
        honorLabels: false
        interval: 60s
        labels: {}
        path: /metrics
        prometheusInstance: default
        scrapeTimeout: 30s
        targetPort: 9402
    replicaCount: 1
    resources: {}
    securityContext:
      runAsNonRoot: true
      seccompProfile:
        type: RuntimeDefault
    serviceAccount:
      automountServiceAccountToken: true
      create: true
    startupapicheck:
      affinity: {}
      backoffLimit: 4
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
      enabled: true
      extraArgs:
        - --dns01-recursive-nameservers=1.1.1.1:53,9.9.9.9:53
        - --dns01-recursive-nameservers-only
      image:
        pullPolicy: IfNotPresent
        repository: quay.io/jetstack/cert-manager-ctl
      jobAnnotations:
        helm.sh/hook: post-install
        helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
        helm.sh/hook-weight: "1"
      nodeSelector:
        kubernetes.io/os: linux
      podLabels: {}
      rbac:
        annotations:
          helm.sh/hook: post-install
          helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
          helm.sh/hook-weight: "-5"
      resources: {}
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount:
        annotations:
          helm.sh/hook: post-install
          helm.sh/hook-delete-policy: before-hook-creation,hook-succeeded
          helm.sh/hook-weight: "-5"
        automountServiceAccountToken: true
        create: true
      timeout: 1m
      tolerations: []
    strategy: {}
    tolerations: []
    topologySpreadConstraints: []
    volumeMounts: []
    volumes: []
    webhook:
      affinity: {}
      config: null
      containerSecurityContext:
        allowPrivilegeEscalation: false
        capabilities:
          drop:
          - ALL
      extraArgs: []
      hostNetwork: false
      image:
        pullPolicy: IfNotPresent
        repository: quay.io/jetstack/cert-manager-webhook
      livenessProbe:
        failureThreshold: 3
        initialDelaySeconds: 60
        periodSeconds: 10
        successThreshold: 1
        timeoutSeconds: 1
      networkPolicy:
        egress:
        - ports:
          - port: 80
            protocol: TCP
          - port: 443
            protocol: TCP
          - port: 53
            protocol: TCP
          - port: 53
            protocol: UDP
          to:
          - ipBlock:
              cidr: 0.0.0.0/0
        enabled: false
        ingress:
        - from:
          - ipBlock:
              cidr: 0.0.0.0/0
      nodeSelector:
        kubernetes.io/os: linux
      podLabels: {}
      readinessProbe:
        failureThreshold: 3
        initialDelaySeconds: 5
        periodSeconds: 5
        successThreshold: 1
        timeoutSeconds: 1
      replicaCount: 1
      resources: {}
      securePort: 10250
      securityContext:
        runAsNonRoot: true
        seccompProfile:
          type: RuntimeDefault
      serviceAccount:
        automountServiceAccountToken: true
        create: true
      serviceLabels: {}
      serviceType: ClusterIP
      strategy: {}
      timeoutSeconds: 10
      tolerations: []
      topologySpreadConstraints: []
      url: {}

